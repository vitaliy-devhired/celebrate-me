{"version":3,"file":"item-options.d.ts","sources":["item-options.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter } from '@angular/core';\nimport { Platform } from '../../platform/platform';\nimport { Side } from '../../util/util';\nimport { ItemSliding } from './item-sliding';\n/**\n * @name ItemOptions\n * @description\n * The option buttons for an `ion-item-sliding`. These buttons can be placed either on the left or right side.\n * You can combine the `(ionSwipe)` event plus the `expandable` directive to create a full swipe action for the item.\n *\n * @usage\n *\n * ```html\n * <ion-item-sliding>\n *   <ion-item>\n *     Item 1\n *   </ion-item>\n *   <ion-item-options side=\"right\" (ionSwipe)=\"saveItem(item)\">\n *     <button ion-button expandable (click)=\"saveItem(item)\">\n *       <ion-icon name=\"star\"></ion-icon>\n *     </button>\n *   </ion-item-options>\n * </ion-item-sliding>\n *```\n */\nexport declare class ItemOptions {\n    private _elementRef;\n    private _plt;\n    /**\n     * @input {string} The side the option button should be on. Defaults to `\"right\"`.\n     * If you have multiple `ion-item-options`, a side must be provided for each.\n     */\n    side: Side;\n    /**\n     * @output {event} Emitted when the item has been fully swiped.\n     */\n    ionSwipe: EventEmitter<ItemSliding>;\n    constructor(_elementRef: ElementRef, _plt: Platform);\n    /**\n     * @hidden\n     */\n    isRightSide(): boolean;\n    /**\n     * @hidden\n     */\n    width(): any;\n}\n"]}