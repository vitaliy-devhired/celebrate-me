{"version":3,"file":"radio-button.d.ts","sources":["radio-button.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnInit, Renderer } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { Form, IonicTapInput } from '../../util/form';\nimport { Ion } from '../ion';\nimport { Item } from '../item/item';\nimport { RadioGroup } from './radio-group';\n/**\n * @description\n * A radio button is a button that can be either checked or unchecked. A user can tap\n * the button to check or uncheck it. It can also be checked from the template using\n * the `checked` property.\n *\n * Use an element with a `radio-group` attribute to group a set of radio buttons. When\n * radio buttons are inside a [radio group](../RadioGroup), exactly one radio button\n * in the group can be checked at any time. If a radio button is not placed in a group,\n * they will all have the ability to be checked at the same time.\n *\n * See the [Angular Forms Docs](https://angular.io/docs/ts/latest/guide/forms.html) for\n * more information on forms and input.\n *\n * @usage\n * ```html\n * <ion-list radio-group [(ngModel)]=\"relationship\">\n *   <ion-item>\n *     <ion-label>Friends</ion-label>\n *     <ion-radio value=\"friends\" checked></ion-radio>\n *   </ion-item>\n *   <ion-item>\n *     <ion-label>Family</ion-label>\n *     <ion-radio value=\"family\"></ion-radio>\n *   </ion-item>\n *   <ion-item>\n *     <ion-label>Enemies</ion-label>\n *     <ion-radio value=\"enemies\" [disabled]=\"isDisabled\"></ion-radio>\n *   </ion-item>\n * </ion-list>\n * ```\n * @demo /docs/demos/src/radio/\n * @see {@link /docs/components#radio Radio Component Docs}\n * @see {@link ../RadioGroup RadioGroup API Docs}\n */\nexport declare class RadioButton extends Ion implements IonicTapInput, OnDestroy, OnInit {\n    private _form;\n    private _item;\n    private _group;\n    /**\n     * @internal\n     */\n    _checked: boolean;\n    /**\n     * @internal\n     */\n    _disabled: boolean;\n    /**\n     * @internal\n     */\n    _labelId: string;\n    /**\n     * @internal\n     */\n    _value: any;\n    /**\n     * @internal\n     */\n    id: string;\n    /**\n     * @input {string} The color to use from your Sass `$colors` map.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"danger\"`, `\"light\"`, and `\"dark\"`.\n     * For more information, see [Theming your App](/docs/theming/theming-your-app).\n     */\n    color: string;\n    /**\n     * @output {any} Emitted when the radio button is selected.\n     */\n    ionSelect: EventEmitter<any>;\n    constructor(_form: Form, config: Config, elementRef: ElementRef, renderer: Renderer, _item: Item, _group: RadioGroup);\n    /**\n     * @input {any} The value of the radio button. Defaults to the generated id.\n     */\n    value: any;\n    /**\n     * @input {boolean} If true, the element is selected, and other buttons in the group are unselected.\n     */\n    checked: boolean;\n    /**\n     * @input {boolean} If true, the user cannot interact with this element.\n     */\n    disabled: boolean;\n    /**\n     * @hidden\n     */\n    initFocus(): void;\n    /**\n     * @internal\n     */\n    _click(ev: UIEvent): void;\n    /**\n     * @internal\n     */\n    ngOnInit(): void;\n    /**\n     * @internal\n     */\n    ngOnDestroy(): void;\n}\n"]}