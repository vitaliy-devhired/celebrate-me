{"version":3,"file":"ion.d.ts","sources":["ion.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer } from '@angular/core';\nimport { Config } from '../config/config';\n/**\n * Base class for all Ionic components. Exposes some common functionality\n * that all Ionic components need, such as accessing underlying native elements and\n * sending/receiving app-level events.\n */\n/** @hidden */\nexport declare class Ion {\n    /** @hidden */\n    _config: Config;\n    /** @hidden */\n    _elementRef: ElementRef;\n    /** @hidden */\n    _renderer: Renderer;\n    /** @hidden */\n    _color: string;\n    /** @hidden */\n    _mode: string;\n    /** @hidden */\n    _componentName: string;\n    /**\n     * @input {string} The color to use from your Sass `$colors` map.\n     * Default options are: `\"primary\"`, `\"secondary\"`, `\"danger\"`, `\"light\"`, and `\"dark\"`.\n     * For more information, see [Theming your App](/docs/theming/theming-your-app).\n     */\n    color: string;\n    /**\n     * @input {string} The mode determines which platform styles to use.\n     * Possible values are: `\"ios\"`, `\"md\"`, or `\"wp\"`.\n     * For more information, see [Platform Styles](/docs/theming/platform-specific-styles).\n     */\n    mode: string;\n    constructor(config: Config, elementRef: ElementRef, renderer: Renderer, componentName?: string);\n    /** @hidden */\n    setElementClass(className: string, isAdd: boolean): void;\n    /** @hidden */\n    setElementAttribute(attributeName: string, attributeValue: any): void;\n    /** @hidden */\n    setElementStyle(property: string, value: string): void;\n    /** @hidden */\n    _setColor(newColor: string, componentName?: string): void;\n    /** @hidden */\n    _setMode(newMode: string): void;\n    /** @hidden */\n    _setComponentName(): void;\n    /** @hidden */\n    getElementRef(): ElementRef;\n    /** @hidden */\n    getNativeElement(): any;\n}\n"]}