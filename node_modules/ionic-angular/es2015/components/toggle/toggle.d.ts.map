{"version":3,"file":"toggle.d.ts","sources":["toggle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ElementRef, NgZone, OnDestroy, Renderer } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { DomController } from '../../platform/dom-controller';\nimport { Form, IonicTapInput } from '../../util/form';\nimport { GestureController } from '../../gestures/gesture-controller';\nimport { Haptic } from '../../tap-click/haptic';\nimport { BaseInput } from '../../util/base-input';\nimport { Item } from '../item/item';\nimport { Platform } from '../../platform/platform';\nimport { ToggleGesture } from './toggle-gesture';\n/**\n * @name Toggle\n * @description\n * A toggle technically is the same thing as an HTML checkbox input,\n * except it looks different and is easier to use on a touch device.\n * Toggles can also have colors assigned to them, by adding any color\n * attribute.\n *\n * See the [Angular Docs](https://angular.io/docs/ts/latest/guide/forms)\n * for more info on forms and inputs.\n *\n * @usage\n * ```html\n *\n *  <ion-list>\n *\n *    <ion-item>\n *      <ion-label>Pepperoni</ion-label>\n *      <ion-toggle [(ngModel)]=\"pepperoni\"></ion-toggle>\n *    </ion-item>\n *\n *    <ion-item>\n *      <ion-label>Sausage</ion-label>\n *      <ion-toggle [(ngModel)]=\"sausage\" disabled=\"true\"></ion-toggle>\n *    </ion-item>\n *\n *    <ion-item>\n *      <ion-label>Mushrooms</ion-label>\n *      <ion-toggle [(ngModel)]=\"mushrooms\"></ion-toggle>\n *    </ion-item>\n *\n *  </ion-list>\n * ```\n *\n * @demo /docs/demos/src/toggle/\n * @see {@link /docs/components#toggle Toggle Component Docs}\n */\nexport declare class Toggle extends BaseInput<boolean> implements IonicTapInput, AfterContentInit, OnDestroy {\n    private _plt;\n    private _haptic;\n    private _gestureCtrl;\n    private _domCtrl;\n    private _zone;\n    _activated: boolean;\n    _startX: number;\n    _gesture: ToggleGesture;\n    /**\n     * @input {boolean} If true, the element is selected.\n     */\n    checked: boolean;\n    constructor(form: Form, config: Config, _plt: Platform, elementRef: ElementRef, renderer: Renderer, _haptic: Haptic, item: Item, _gestureCtrl: GestureController, _domCtrl: DomController, _zone: NgZone);\n    /**\n     * @hidden\n     */\n    ngAfterContentInit(): void;\n    /**\n     * @hidden\n     */\n    _inputUpdated(): void;\n    /**\n     * @hidden\n     */\n    _inputNormalize(val: any): boolean;\n    /**\n     * @hidden\n     */\n    _onDragStart(startX: number): void;\n    /**\n     * @hidden\n     */\n    _onDragMove(currentX: number): void;\n    /**\n     * @hidden\n     */\n    _onDragEnd(endX: number): void;\n    /**\n     * @hidden\n     */\n    _shouldToggle(currentX: number, margin: number): boolean;\n    /**\n     * @hidden\n     */\n    _keyup(ev: KeyboardEvent): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n}\n"]}