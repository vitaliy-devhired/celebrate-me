{"version":3,"file":"fab.d.ts","sources":["fab.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { Ion } from '../ion';\n/**\n  * @name FabButton\n  * @module ionic\n  *\n  * @description\n  * FABs (Floating Action Buttons) are standard material design components. They are shaped as a circle that represents a promoted action. When pressed, it may contain more related actions.\n  * FABs as its name suggests are floating over the content in a fixed position. This is not achieved exclusively with `<button ion-fab>Button</button>` but it has to be wrapped with the `<ion-fab>` component, like this:\n  *\n  * ```html\n  * <ion-content>\n  *  <!-- Real floating action button, fixed. It will not scroll with the content -->\n  *  <ion-fab>\n  *    <button ion-fab>Button</button>\n  *  </ion-fab>\n  *\n  *  <!-- Button shaped as a circle that just like a normal button scrolls with the content -->\n  *  <button ion-fab>Button</button>\n  * </ion-content>\n  *\n  * ```\n  *\n  * In case the button is not wrapped with `<ion-fab>`, the fab button will behave like a normal button, scrolling with the content.\n  *\n  * See [ion-fab] to learn more information about how to position the fab button.\n  *\n  * @property [mini] - Makes a fab button with a reduced size.\n  *\n  * @usage\n  *\n  * ```html\n  *\n  * <!-- Colors -->\n  * <ion-fab>\n  *   <button ion-fab color=\"primary\">Button</button>\n  * </ion-fab>\n  *\n  * <!-- Mini -->\n  * <ion-fab>\n  *   <button ion-fab mini>Small</button>\n  * </ion-fab>\n  * ```\n  *\n  * @demo /docs/demos/src/fab/\n  * @see {@link /docs/components#fabs FAB Component Docs}\n */\nexport declare class FabButton extends Ion {\n    constructor(config: Config, elementRef: ElementRef, renderer: Renderer);\n    /**\n     * @hidden\n     */\n    setActiveClose(closeVisible: boolean): void;\n}\n"]}