{"version":3,"file":"menu-toggle.d.ts","sources":["menu-toggle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Button } from '../button/button';\nimport { MenuController } from '../app/menu-controller';\nimport { Navbar } from '../toolbar/navbar';\nimport { ViewController } from '../../navigation/view-controller';\n/**\n * @name MenuToggle\n * @description\n * The `menuToggle` directive can be placed on any button to toggle a menu open or closed.\n * If it is added to the [NavBar](../../toolbar/Navbar) of a page, the button will only appear\n * when the page it's in is currently a root page. See the [Menu Navigation Bar Behavior](../Menu#navigation-bar-behavior)\n * docs for more information.\n *\n *\n * @usage\n *\n * A simple `menuToggle` button can be added using the following markup:\n *\n * ```html\n * <button ion-button menuToggle>Toggle Menu</button>\n * ```\n *\n * To toggle a specific menu by its id or side, give the `menuToggle`\n * directive a value.\n *\n * ```html\n * <button ion-button menuToggle=\"right\">Toggle Right Menu</button>\n * ```\n *\n * If placing the `menuToggle` in a navbar or toolbar, it should be\n * placed as a child of the `<ion-navbar>` or `<ion-toolbar>`, and not in\n * the `<ion-buttons>` element:\n *\n * ```html\n * <ion-header>\n *\n *   <ion-navbar>\n *     <ion-buttons start>\n *       <button ion-button>\n *         <ion-icon name=\"contact\"></ion-icon>\n *       </button>\n *     </ion-buttons>\n *     <button ion-button menuToggle>\n *       <ion-icon name=\"menu\"></ion-icon>\n *     </button>\n *     <ion-title>\n *       Title\n *     </ion-title>\n *     <ion-buttons end>\n *       <button ion-button (click)=\"doClick()\">\n *         <ion-icon name=\"more\"></ion-icon>\n *       </button>\n *     </ion-buttons>\n *   </ion-navbar>\n *\n * </ion-header>\n * ```\n *\n * Similar to `<ion-buttons>`, the `menuToggle` can be positioned using\n * `start`, `end`, `left`, or `right`:\n *\n * ```html\n * <ion-toolbar>\n *   <button ion-button menuToggle right>\n *     <ion-icon name=\"menu\"></ion-icon>\n *   </button>\n *   <ion-title>\n *     Title\n *   </ion-title>\n *   <ion-buttons end>\n *     <button ion-button (click)=\"doClick()\">\n *       <ion-icon name=\"more\"></ion-icon>\n *     </button>\n *   </ion-buttons>\n * </ion-toolbar>\n * ```\n *\n * See the [Toolbar API docs](../../toolbar/Toolbar) for more information\n * on the different positions.\n *\n * @demo /docs/demos/src/menu/\n * @see {@link /docs/components#menus Menu Component Docs}\n * @see {@link ../../menu/Menu Menu API Docs}\n */\nexport declare class MenuToggle {\n    private _menu;\n    private _viewCtrl;\n    private _button;\n    /**\n     * @hidden\n     */\n    menuToggle: string;\n    /**\n     * @hidden\n     */\n    private _isButton;\n    /**\n     * @hidden\n     */\n    private _inNavbar;\n    constructor(_menu: MenuController, _viewCtrl: ViewController, _button: Button, _navbar: Navbar);\n    ngAfterContentInit(): void;\n    /**\n    * @hidden\n    */\n    toggle(): void;\n    /**\n    * @hidden\n    */\n    readonly isHidden: boolean;\n}\n"]}