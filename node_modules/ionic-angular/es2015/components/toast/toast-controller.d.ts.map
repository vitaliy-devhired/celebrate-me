{"version":3,"file":"toast-controller.d.ts","sources":["toast-controller.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { App } from '../app/app';\nimport { Config } from '../../config/config';\nimport { Toast } from './toast';\nimport { ToastOptions } from './toast-options';\n/**\n * @name ToastController\n * @description\n * A Toast is a subtle notification commonly used in modern applications.\n * It can be used to provide feedback about an operation or to\n * display a system message. The toast appears on top of the app's content,\n * and can be dismissed by the app to resume user interaction with\n * the app.\n *\n * ### Creating\n * All of the toast options should be passed in the first argument of\n * the create method: `create(opts)`. The message to display should be\n * passed in the `message` property. The `showCloseButton` option can be set to\n * true in order to display a close button on the toast. See the [create](#create)\n * method below for all available options.\n *\n * ### Positioning\n * Toasts can be positioned at the top, bottom or middle of the\n * view port. The position can be passed to the `Toast.create(opts)` method.\n * The position option is a string, and the values accepted are `top`, `bottom` and `middle`.\n * If the position is not specified, the toast will be displayed at the bottom of the view port.\n *\n * ### Dismissing\n * The toast can be dismissed automatically after a specific amount of time\n * by passing the number of milliseconds to display it in the `duration` of\n * the toast options. If `showCloseButton` is set to true, then the close button\n * will dismiss the toast. To dismiss the toast after creation, call the `dismiss()`\n * method on the Toast instance. The `onDidDismiss` function can be called to perform an action after the toast\n * is dismissed.\n *\n * @usage\n * ```ts\n * import { ToastController } from 'ionic-angular';\n *\n * constructor(public toastCtrl: ToastController) { }\n *\n * presentToast() {\n *   const toast = this.toastCtrl.create({\n *     message: 'User was added successfully',\n *     duration: 3000,\n *     position: 'top'\n *   });\n *\n *   toast.onDidDismiss(() => {\n *     console.log('Dismissed toast');\n *   });\n *\n *   toast.present();\n * }\n * ```\n * @advanced\n * | Property              | Type      | Default         | Description                                                                                                   |\n * |-----------------------|-----------|-----------------|---------------------------------------------------------------------------------------------------------------|\n * | message               | `string`  | -               | The message for the toast. Long strings will wrap and the toast container will expand.                        |\n * | duration              | `number`  | -               | How many milliseconds to wait before hiding the toast. By default, it will show until `dismiss()` is called.  |\n * | position              | `string`  | \"bottom\"        | The position of the toast on the screen. Accepted values: \"top\", \"middle\", \"bottom\".                          |\n * | cssClass              | `string`  | -               | Additional classes for custom styles, separated by spaces.                                                    |\n * | showCloseButton       | `boolean` | false           | Whether or not to show a button to close the toast.                                                           |\n * | closeButtonText       | `string`  | \"Close\"         | Text to display in the close button.                                                                          |\n * | dismissOnPageChange   | `boolean` | false           | Whether to dismiss the toast when navigating to a new page.                                                   |\n *\n * @demo /docs/demos/src/toast/\n */\nexport declare class ToastController {\n    private _app;\n    config: Config;\n    constructor(_app: App, config: Config);\n    /**\n     * Create a new toast component. See options below\n     * @param {ToastOptions} opts Toast options. See the below table for available options.\n     */\n    create(opts?: ToastOptions): Toast;\n}\n"]}