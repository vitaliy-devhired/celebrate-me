{"version":3,"file":"nav.d.ts","sources":["nav.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ComponentFactoryResolver, ElementRef, ErrorHandler, NgZone, Renderer, ViewContainerRef } from '@angular/core';\nimport { App } from '../app/app';\nimport { Config } from '../../config/config';\nimport { DeepLinker } from '../../navigation/deep-linker';\nimport { DomController } from '../../platform/dom-controller';\nimport { GestureController } from '../../gestures/gesture-controller';\nimport { Nav as INav } from '../../navigation/nav-interfaces';\nimport { NavController } from '../../navigation/nav-controller';\nimport { NavControllerBase } from '../../navigation/nav-controller-base';\nimport { NavOptions } from '../../navigation/nav-util';\nimport { Platform } from '../../platform/platform';\nimport { TransitionController } from '../../transitions/transition-controller';\nimport { ViewController } from '../../navigation/view-controller';\nimport { RootNode } from '../split-pane/split-pane';\n/**\n * @name Nav\n * @description\n *\n * `ion-nav` is the declarative component for a [NavController](../../../navigation/NavController/).\n *\n * For more information on using nav controllers like Nav or [Tab](../../Tabs/Tab/),\n * take a look at the [NavController API Docs](../../../navigation/NavController/).\n *\n *\n * @usage\n * You must set a root page to be loaded initially by any Nav you create, using\n * the 'root' property:\n *\n * ```ts\n * import { Component } from '@angular/core';\n * import { GettingStartedPage } from './getting-started';\n *\n * @Component({\n *   template: `<ion-nav [root]=\"root\"></ion-nav>`\n * })\n * class MyApp {\n *   root = GettingStartedPage;\n *\n *   constructor(){\n *   }\n * }\n * ```\n *\n * @demo /docs/demos/src/navigation/\n * @see {@link /docs/components#navigation Navigation Component Docs}\n */\nexport declare class Nav extends NavControllerBase implements AfterViewInit, RootNode, INav {\n    private _root;\n    private _hasInit;\n    constructor(viewCtrl: ViewController, parent: NavController, app: App, config: Config, plt: Platform, elementRef: ElementRef, zone: NgZone, renderer: Renderer, cfr: ComponentFactoryResolver, gestureCtrl: GestureController, transCtrl: TransitionController, linker: DeepLinker, domCtrl: DomController, errHandler: ErrorHandler);\n    /**\n     * @hidden\n     */\n    _vp: ViewContainerRef;\n    ngAfterViewInit(): Promise<any>;\n    /**\n     * @input {Page} The Page component to load as the root page within this nav.\n     */\n    root: any;\n    /**\n     * @input {object} Any nav-params to pass to the root page of this nav.\n     */\n    rootParams: any;\n    /**\n     * @input {string} a unique name for the nav element\n     */\n    name: string;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    initPane(): boolean;\n    paneChanged(isPane: boolean): void;\n    goToRoot(opts: NavOptions): Promise<any>;\n    getType(): string;\n    getSecondaryIdentifier(): string;\n}\n"]}