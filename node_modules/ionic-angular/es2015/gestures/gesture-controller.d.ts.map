{"version":3,"file":"gesture-controller.d.ts","sources":["gesture-controller.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { App } from '../components/app/app';\n/** @hidden */\nexport declare const GESTURE_GO_BACK_SWIPE = \"goback-swipe\";\n/** @hidden */\nexport declare const GESTURE_MENU_SWIPE = \"menu-swipe\";\n/** @hidden */\nexport declare const GESTURE_ITEM_SWIPE = \"item-swipe\";\n/** @hidden */\nexport declare const GESTURE_REFRESHER = \"refresher\";\n/** @hidden */\nexport declare const GESTURE_TOGGLE = \"toggle\";\n/** @hidden */\nexport declare const GESTURE_PRIORITY_SLIDING_ITEM = -10;\n/** @hidden */\nexport declare const GESTURE_PRIORITY_REFRESHER = 0;\n/** @hidden */\nexport declare const GESTURE_PRIORITY_MENU_SWIPE = 10;\n/** @hidden */\nexport declare const GESTURE_PRIORITY_GO_BACK_SWIPE = 20;\n/** @hidden */\nexport declare const GESTURE_PRIORITY_TOGGLE = 30;\n/**\n* @hidden\n*/\nexport interface GestureOptions {\n    name: string;\n    disableScroll?: boolean;\n    priority?: number;\n}\n/**\n* @hidden\n*/\nexport interface BlockerOptions {\n    disableScroll?: boolean;\n    disable?: string[];\n}\n/**\n* @hidden\n*/\nexport declare const BLOCK_ALL: BlockerOptions;\n/**\n* @hidden\n*/\nexport declare class GestureController {\n    private _app;\n    private id;\n    private requestedStart;\n    private disabledGestures;\n    private disabledScroll;\n    private capturedID;\n    constructor(_app: App);\n    createGesture(opts: GestureOptions): GestureDelegate;\n    createBlocker(opts?: BlockerOptions): BlockerDelegate;\n    newID(): number;\n    start(gestureName: string, id: number, priority: number): boolean;\n    capture(gestureName: string, id: number, priority: number): boolean;\n    release(id: number): void;\n    disableGesture(gestureName: string, id: number): void;\n    enableGesture(gestureName: string, id: number): void;\n    disableScroll(id: number): void;\n    enableScroll(id: number): void;\n    canStart(gestureName: string): boolean;\n    isCaptured(): boolean;\n    isScrollDisabled(): boolean;\n    isDisabled(gestureName: string): boolean;\n}\n/**\n* @hidden\n*/\nexport declare class GestureDelegate {\n    private name;\n    private id;\n    private controller;\n    private priority;\n    private disableScroll;\n    constructor(name: string, id: number, controller: GestureController, priority: number, disableScroll: boolean);\n    canStart(): boolean;\n    start(): boolean;\n    capture(): boolean;\n    release(): void;\n    destroy(): void;\n}\n/**\n* @hidden\n*/\nexport declare class BlockerDelegate {\n    private id;\n    private controller;\n    private disable;\n    private disableScroll;\n    blocked: boolean;\n    constructor(id: number, controller: GestureController, disable: string[], disableScroll: boolean);\n    block(): void;\n    unblock(): void;\n    destroy(): void;\n}\n"]}