{"version":3,"file":"haptic.d.ts","sources":["haptic.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Platform } from '../platform/platform';\n/**\n * @name Haptic\n * @description\n * The `Haptic` class interacts with a haptic engine on the device, if\n * available. Generally, Ionic components use this under the hood, but you're\n * welcome to get a bit crazy with it if you fancy.\n *\n * Currently, this uses the Taptic engine on iOS.\n *\n * @usage\n * ```ts\n * export class MyClass {\n *\n *  constructor(haptic: Haptic) {\n *    haptic.selection();\n *  }\n * }\n *\n * ```\n */\nexport declare class Haptic {\n    private _p;\n    constructor(plt: Platform);\n    /**\n     * Check to see if the Haptic Plugin is available\n     * @return {boolean} Returns true or false if the plugin is available\n     *\n     */\n    available(): boolean;\n    /**\n     * Trigger a selection changed haptic event. Good for one-time events\n     * (not for gestures)\n     */\n    selection(): void;\n    /**\n     * Tell the haptic engine that a gesture for a selection change is starting.\n     */\n    gestureSelectionStart(): void;\n    /**\n     * Tell the haptic engine that a selection changed during a gesture.\n     */\n    gestureSelectionChanged(): void;\n    /**\n     * Tell the haptic engine we are done with a gesture. This needs to be\n     * called lest resources are not properly recycled.\n     */\n    gestureSelectionEnd(): void;\n    /**\n     * Use this to indicate success/failure/warning to the user.\n     * options should be of the type `{ type: 'success' }` (or `warning`/`error`)\n     */\n    notification(options: {\n        type: string;\n    }): void;\n    /**\n     * Use this to indicate success/failure/warning to the user.\n     * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n     */\n    impact(options: {\n        style: string;\n    }): void;\n}\n"]}