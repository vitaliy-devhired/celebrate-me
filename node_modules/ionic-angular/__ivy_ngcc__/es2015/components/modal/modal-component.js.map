{"version":3,"file":"modal-component.js","sources":["modal-component.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;8DASE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;oBAAE;AACF","sourcesContent":["import { Component, ComponentFactoryResolver, ElementRef, HostListener, Renderer, ViewChild, ViewContainerRef } from '@angular/core';\nimport { KEY_ESCAPE } from '../../platform/key';\nimport { NavParams } from '../../navigation/nav-params';\nimport { ViewController } from '../../navigation/view-controller';\nimport { GESTURE_GO_BACK_SWIPE, GESTURE_MENU_SWIPE, GestureController } from '../../gestures/gesture-controller';\nimport { ModuleLoader } from '../../util/module-loader';\n/**\n * @hidden\n */\nexport class ModalCmp {\n    constructor(_cfr, _renderer, _elementRef, _navParams, _viewCtrl, gestureCtrl, moduleLoader) {\n        this._cfr = _cfr;\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._navParams = _navParams;\n        this._viewCtrl = _viewCtrl;\n        this.moduleLoader = moduleLoader;\n        let opts = _navParams.get('opts');\n        (void 0) /* assert */;\n        this._gestureBlocker = gestureCtrl.createBlocker({\n            disable: [GESTURE_MENU_SWIPE, GESTURE_GO_BACK_SWIPE]\n        });\n        this._bdDismiss = opts.enableBackdropDismiss;\n        if (opts.cssClass) {\n            opts.cssClass.split(' ').forEach((cssClass) => {\n                // Make sure the class isn't whitespace, otherwise it throws exceptions\n                if (cssClass.trim() !== '')\n                    _renderer.setElementClass(_elementRef.nativeElement, cssClass, true);\n            });\n        }\n    }\n    ionViewPreLoad() {\n        const component = this._navParams.data.component;\n        if (!component) {\n            console.warn('modal\\'s page was not defined');\n            return;\n        }\n        let cfr = this.moduleLoader.getComponentFactoryResolver(component);\n        if (!cfr) {\n            cfr = this._cfr;\n        }\n        const componentFactory = cfr.resolveComponentFactory(component);\n        // ******** DOM WRITE ****************\n        const componentRef = this._viewport.createComponent(componentFactory, this._viewport.length, this._viewport.parentInjector, []);\n        this._setCssClass(componentRef, 'ion-page');\n        this._setCssClass(componentRef, 'show-page');\n        // Change the viewcontroller's instance to point the user provided page\n        // Lifecycle events will be sent to the new instance, instead of the modal's component\n        // we need to manually subscribe to them\n        this._viewCtrl._setInstance(componentRef.instance);\n        this._viewCtrl.willEnter.subscribe(this._viewWillEnter.bind(this));\n        this._viewCtrl.didLeave.subscribe(this._viewDidLeave.bind(this));\n        this._enabled = true;\n    }\n    _viewWillEnter() {\n        this._gestureBlocker.block();\n    }\n    _viewDidLeave() {\n        this._gestureBlocker.unblock();\n    }\n    _setCssClass(componentRef, className) {\n        this._renderer.setElementClass(componentRef.location.nativeElement, className, true);\n    }\n    _bdClick() {\n        if (this._enabled && this._bdDismiss) {\n            const opts = {\n                minClickBlockDuration: 400\n            };\n            return this._viewCtrl.dismiss(null, 'backdrop', opts);\n        }\n    }\n    _keyUp(ev) {\n        if (this._enabled && this._viewCtrl.isLast() && ev.keyCode === KEY_ESCAPE) {\n            this._bdClick();\n        }\n    }\n    ngOnDestroy() {\n        (void 0) /* assert */;\n        this._gestureBlocker.destroy();\n    }\n}\nModalCmp.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-modal',\n                template: '<ion-backdrop (click)=\"_bdClick()\" [class.backdrop-no-tappable]=\"!_bdDismiss\"></ion-backdrop>' +\n                    '<div class=\"modal-wrapper\">' +\n                    '<div #viewport nav-viewport></div>' +\n                    '</div>'\n            },] },\n];\n/** @nocollapse */\nModalCmp.ctorParameters = () => [\n    { type: ComponentFactoryResolver, },\n    { type: Renderer, },\n    { type: ElementRef, },\n    { type: NavParams, },\n    { type: ViewController, },\n    { type: GestureController, },\n    { type: ModuleLoader, },\n];\nModalCmp.propDecorators = {\n    '_viewport': [{ type: ViewChild, args: ['viewport', { read: ViewContainerRef },] },],\n    '_keyUp': [{ type: HostListener, args: ['body:keyup', ['$event'],] },],\n};\n"]}