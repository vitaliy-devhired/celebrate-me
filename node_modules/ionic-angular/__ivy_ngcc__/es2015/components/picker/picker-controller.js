import { Injectable } from '@angular/core';
import { App } from '../app/app';
import { Config } from '../../config/config';
import { Picker } from './picker';
/**
 * @hidden
 * @name PickerController
 * @description
 *
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../app/app';
import * as ɵngcc2 from '../../config/config';
export class PickerController {
    constructor(_app, config) {
        this._app = _app;
        this.config = config;
    }
    /**
     * Open a picker.
     */
    create(opts = {}) {
        return new Picker(this._app, opts, this.config);
    }
}
PickerController.ɵfac = function PickerController_Factory(t) { return new (t || PickerController)(ɵngcc0.ɵɵinject(ɵngcc1.App), ɵngcc0.ɵɵinject(ɵngcc2.Config)); };
PickerController.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: PickerController, factory: PickerController.ɵfac });
/** @nocollapse */
PickerController.ctorParameters = () => [
    { type: App, },
    { type: Config, },
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PickerController, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.App }, { type: ɵngcc2.Config }]; }, null); })();

//# sourceMappingURL=picker-controller.js.map