import { Attribute, Directive, ElementRef, Renderer } from '@angular/core';
import { Config } from '../../config/config';
import { Ion } from '../ion';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../config/config';
export class ListHeader extends Ion {
    constructor(config, renderer, elementRef, _id) {
        super(config, elementRef, renderer, 'list-header');
        this._id = _id;
    }
    get id() {
        return this._id;
    }
    set id(val) {
        this._id = val;
        this.setElementAttribute('id', val);
    }
}
ListHeader.ɵfac = function ListHeader_Factory(t) { return new (t || ListHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Config), ɵngcc0.ɵɵdirectiveInject(Renderer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('id')); };
ListHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ListHeader, selectors: [["ion-list-header"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
/** @nocollapse */
ListHeader.ctorParameters = () => [
    { type: Config, },
    { type: Renderer, },
    { type: ElementRef, },
    { type: undefined, decorators: [{ type: Attribute, args: ['id',] },] },
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ListHeader, [{
        type: Directive,
        args: [{
                selector: 'ion-list-header'
            }]
    }], function () { return [{ type: ɵngcc1.Config }, { type: Renderer }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{
                type: Attribute,
                args: ['id']
            }] }]; }, null); })();

//# sourceMappingURL=list-header.js.map