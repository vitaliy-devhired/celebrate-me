{"version":3,"file":"range-knob.js","sources":["range-knob.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;0DAoBE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AACF","sourcesContent":["import { Component, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { KEY_DOWN, KEY_LEFT, KEY_RIGHT, KEY_UP } from '../../platform/key';\n/**\n * @hidden\n */\nexport class RangeKnob {\n    constructor() {\n        this.ionIncrease = new EventEmitter();\n        this.ionDecrease = new EventEmitter();\n    }\n    set ratio(r) {\n        this._x = `${r * 100}%`;\n    }\n    _keyup(ev) {\n        const keyCode = ev.keyCode;\n        if (keyCode === KEY_LEFT || keyCode === KEY_DOWN) {\n            (void 0) /* console.debug */;\n            this.ionDecrease.emit();\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n        else if (keyCode === KEY_RIGHT || keyCode === KEY_UP) {\n            (void 0) /* console.debug */;\n            this.ionIncrease.emit();\n            ev.preventDefault();\n            ev.stopPropagation();\n        }\n    }\n}\nRangeKnob.decorators = [\n    { type: Component, args: [{\n                selector: '.range-knob-handle',\n                template: '<div class=\"range-pin\" *ngIf=\"pin\" role=\"presentation\">{{val}}</div>' +\n                    '<div class=\"range-knob\" role=\"presentation\"></div>',\n                host: {\n                    '[class.range-knob-pressed]': 'pressed',\n                    '[class.range-knob-min]': 'val===min||val===undefined',\n                    '[class.range-knob-max]': 'val===max',\n                    '[style.left]': '_x',\n                    '[attr.aria-valuenow]': 'val',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-labelledby]': 'labelId',\n                    '[tabindex]': 'disabled?-1:0',\n                    'role': 'slider'\n                }\n            },] },\n];\n/** @nocollapse */\nRangeKnob.ctorParameters = () => [];\nRangeKnob.propDecorators = {\n    'ratio': [{ type: Input },],\n    'pressed': [{ type: Input },],\n    'pin': [{ type: Input },],\n    'min': [{ type: Input },],\n    'max': [{ type: Input },],\n    'val': [{ type: Input },],\n    'disabled': [{ type: Input },],\n    'labelId': [{ type: Input },],\n    'ionIncrease': [{ type: Output },],\n    'ionDecrease': [{ type: Output },],\n    '_keyup': [{ type: HostListener, args: ['keydown', ['$event'],] },],\n};\n"]}