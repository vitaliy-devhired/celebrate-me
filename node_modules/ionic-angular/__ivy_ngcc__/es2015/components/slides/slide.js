import { ChangeDetectionStrategy, Component, ElementRef, Renderer, ViewEncapsulation } from '@angular/core';
import { Slides } from './slides';
/**
 * @name Slide
 * @description
 * The Slide component is a child component of [Slides](../Slides). The template
 * should be written as `ion-slide`. Any slide content should be written
 * in this component and it should be used in conjunction with [Slides](../Slides).
 *
 * See the [Slides API Docs](../Slides) for more usage information.
 *
 * @demo /docs/demos/src/slides/
 * @see {@link /docs/api/components/slides/Slides/ Slides API Docs}
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './slides';

const _c0 = ["*"];
export class Slide {
    constructor(elementRef, renderer, _slides) {
        this._slides = _slides;
        renderer.setElementClass(elementRef.nativeElement, 'swiper-slide', true);
        _slides.update(10);
    }
    /**
     * @hidden
     */
    ngOnDestroy() {
        this._slides.update(10);
    }
}
Slide.ɵfac = function Slide_Factory(t) { return new (t || Slide)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Slides)); };
Slide.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: Slide, selectors: [["ion-slide"]], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, "slide-zoom"]], template: function Slide_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2, changeDetection: 0 });
/** @nocollapse */
Slide.ctorParameters = () => [
    { type: ElementRef, },
    { type: Renderer, },
    { type: Slides, },
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Slide, [{
        type: Component,
        args: [{
                selector: 'ion-slide',
                template: '<div class="slide-zoom">' +
                    '<ng-content></ng-content>' +
                    '</div>',
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: Renderer }, { type: ɵngcc1.Slides }]; }, null); })();

//# sourceMappingURL=slide.js.map