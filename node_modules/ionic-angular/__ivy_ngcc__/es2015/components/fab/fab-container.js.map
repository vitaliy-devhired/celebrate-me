{"version":3,"file":"fab-container.js","sources":["fab-container.js"],"names":[],"mappingsoBAAE;AACF","sourcesContent":["import { Component, ContentChild, ContentChildren } from '@angular/core';\nimport { Platform } from '../../platform/platform';\nimport { UIEventManager } from '../../gestures/ui-event-manager';\nimport { FabButton } from './fab';\nimport { FabList } from './fab-list';\n/**\n  * @name FabContainer\n  * @module ionic\n  *\n  * @description\n  * `<ion-fab>` is not a FAB button by itself but a container that assist the fab button (`<button ion-fab>`) allowing it\n  * to be placed in fixed position that does not scroll with the content. It is also used to implement \"material design speed dial\",\n  * ie. a FAB buttons displays a small lists of related actions when clicked.\n  *\n  * @property [top] - Places the container on the top of the content\n  * @property [bottom] - Places the container on the bottom  of the content\n  * @property [left] - Places the container on the left\n  * @property [right] - Places the container on the right\n  * @property [middle] - Places the container on the middle vertically\n  * @property [center] - Places the container on the center horizontally\n  * @property [edge] - Used to place the container between the content and the header/footer\n  *\n  * @usage\n  *\n  * ```html\n  * <!-- this fab is placed at top right -->\n  * <ion-content>\n  *  <ion-fab top right>\n  *    <button ion-fab>Button</button>\n  *  </ion-fab>\n  *\n  *  <!-- this fab is placed at the center of the content viewport -->\n  *  <ion-fab center middle>\n  *    <button ion-fab>Button</button>\n  *  </ion-fab>\n  * </ion-content>\n  * ```\n  *\n  * Ionic's FAB also supports \"material design's fab speed dial\". It is a normal fab button\n  * that shows a list of related actions when clicked.\n  *\n  * The same `ion-fab` container can contain several `ion-fab-list` with different side values:\n  * `top`, `bottom`, `left` and `right`. For example, if you want to have a list of button that are\n  * on the top of the main button, you should use `side=\"top\"` and so on. By default, if side is ommited, `side=\"bottom\"`.\n  *\n  * ```html\n  * <ion-content>\n  *  <!-- this fab is placed at bottom right -->\n  *  <ion-fab bottom right >\n  *    <button ion-fab>Share</button>\n  *    <ion-fab-list side=\"top\">\n  *      <button ion-fab>Facebook</button>\n  *      <button ion-fab>Twitter</button>\n  *      <button ion-fab>Youtube</button>\n  *    </ion-fab-list>\n  *    <ion-fab-list side=\"left\">\n  *      <button ion-fab>Vimeo</button>\n  *    </ion-fab-list>\n  *  </ion-fab>\n  * </ion-content>\n  * ```\n  *\n  * A FAB speed dial can also be closed programatically.\n  *\n  * ```html\n  * <ion-content>\n  *  <ion-fab bottom right #fab>\n  *    <button ion-fab>Share</button>\n  *    <ion-fab-list side=\"top\">\n  *      <button ion-fab (click)=\"share('facebook', fab)\">Facebook</button>\n  *      <button ion-fab (click)=\"share('twitter', fab)\">Twitter</button>\n  *    </ion-fab-list>\n  *  </ion-fab>\n  * </ion-content>\n  * ```\n  *\n  * ```ts\n  * share(socialNet: string, fab: FabContainer) {\n  *   fab.close();\n  *   console.log(\"Sharing in\", socialNet);\n  * }\n  * ```\n  *\n  * @demo /docs/demos/src/fab/\n  * @see {@link /docs/components#fabs FAB Component Docs}\n */\nexport class FabContainer {\n    constructor(plt) {\n        /**\n         * @hidden\n         */\n        this._listsActive = false;\n        this._events = new UIEventManager(plt);\n    }\n    /**\n     * @hidden\n     */\n    ngAfterContentInit() {\n        const mainButton = this._mainButton;\n        if (!mainButton || !mainButton.getNativeElement()) {\n            console.error('FAB container needs a main <button ion-fab>');\n            return;\n        }\n        this._events.listen(mainButton.getNativeElement(), 'click', this.clickHandler.bind(this), { zone: true });\n    }\n    /**\n     * @hidden\n     */\n    clickHandler(ev) {\n        if (this.canActivateList(ev)) {\n            this.toggleList();\n        }\n    }\n    /**\n     * @hidden\n     */\n    canActivateList(ev) {\n        if (this._fabLists.length > 0 && this._mainButton && ev.target) {\n            let ele = ev.target.closest('ion-fab>[ion-fab]');\n            return (ele && ele === this._mainButton.getNativeElement());\n        }\n        return false;\n    }\n    /**\n     * @hidden\n     */\n    toggleList() {\n        this.setActiveLists(!this._listsActive);\n    }\n    /**\n     * @hidden\n     */\n    setActiveLists(isActive) {\n        if (isActive === this._listsActive) {\n            return;\n        }\n        let lists = this._fabLists.toArray();\n        for (let list of lists) {\n            list.setVisible(isActive);\n        }\n        this._mainButton.setActiveClose(isActive);\n        this._listsActive = isActive;\n    }\n    /**\n     * Close an active FAB list container\n     */\n    close() {\n        this.setActiveLists(false);\n    }\n    /**\n     * @hidden\n     */\n    ngOnDestroy() {\n        this._events.destroy();\n    }\n}\nFabContainer.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-fab',\n                template: '<ng-content></ng-content>'\n            },] },\n];\n/** @nocollapse */\nFabContainer.ctorParameters = () => [\n    { type: Platform, },\n];\nFabContainer.propDecorators = {\n    '_mainButton': [{ type: ContentChild, args: [FabButton,] },],\n    '_fabLists': [{ type: ContentChildren, args: [FabList,] },],\n};\n"]}