{"version":3,"file":"nav-pop.js","sources":["nav-pop.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;oBAAE;AACF","sourcesContent":["import { Directive, HostListener, Optional } from '@angular/core';\nimport { NavController } from '../../navigation/nav-controller';\n/**\n * @name NavPop\n * @description\n * Directive to declaratively pop the current page off from the\n * navigation stack.\n *\n * @usage\n * ```html\n * <ion-content>\n *\n *  <button ion-button navPop>Go Back</button>\n *\n * </ion-content>\n * ```\n *\n * Similar to {@link /docs/api/components/nav/NavPush/ `NavPush` }\n * @demo /docs/demos/src/navigation/\n * @see {@link /docs/components#navigation Navigation Component Docs}\n * @see {@link ../NavPush NavPush API Docs}\n */\nexport class NavPop {\n    constructor(_nav) {\n        this._nav = _nav;\n        if (!_nav) {\n            console.error('navPop must be within a NavController');\n        }\n    }\n    /**\n     * @hidden\n     */\n    onClick() {\n        // If no target, or if target is _self, prevent default browser behavior\n        if (this._nav) {\n            this._nav.pop().catch(() => {\n                (void 0) /* console.debug */;\n            });\n            return false;\n        }\n        return true;\n    }\n}\nNavPop.decorators = [\n    { type: Directive, args: [{\n                selector: '[navPop]'\n            },] },\n];\n/** @nocollapse */\nNavPop.ctorParameters = () => [\n    { type: NavController, decorators: [{ type: Optional },] },\n];\nNavPop.propDecorators = {\n    'onClick': [{ type: HostListener, args: ['click',] },],\n};\n"]}