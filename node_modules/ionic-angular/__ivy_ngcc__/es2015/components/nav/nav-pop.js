import { Directive, HostListener, Optional } from '@angular/core';
import { NavController } from '../../navigation/nav-controller';
/**
 * @name NavPop
 * @description
 * Directive to declaratively pop the current page off from the
 * navigation stack.
 *
 * @usage
 * ```html
 * <ion-content>
 *
 *  <button ion-button navPop>Go Back</button>
 *
 * </ion-content>
 * ```
 *
 * Similar to {@link /docs/api/components/nav/NavPush/ `NavPush` }
 * @demo /docs/demos/src/navigation/
 * @see {@link /docs/components#navigation Navigation Component Docs}
 * @see {@link ../NavPush NavPush API Docs}
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../navigation/nav-controller';
export class NavPop {
    constructor(_nav) {
        this._nav = _nav;
        if (!_nav) {
            console.error('navPop must be within a NavController');
        }
    }
    /**
     * @hidden
     */
    onClick() {
        // If no target, or if target is _self, prevent default browser behavior
        if (this._nav) {
            this._nav.pop().catch(() => {
                (void 0) /* console.debug */;
            });
            return false;
        }
        return true;
    }
}
NavPop.ɵfac = function NavPop_Factory(t) { return new (t || NavPop)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NavController, 8)); };
NavPop.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NavPop, selectors: [["", "navPop", ""]], hostBindings: function NavPop_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("click", function NavPop_click_HostBindingHandler() { return ctx.onClick(); });
    } } });
/** @nocollapse */
NavPop.ctorParameters = () => [
    { type: NavController, decorators: [{ type: Optional },] },
];
NavPop.propDecorators = {
    'onClick': [{ type: HostListener, args: ['click',] },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavPop, [{
        type: Directive,
        args: [{
                selector: '[navPop]'
            }]
    }], function () { return [{ type: ɵngcc1.NavController, decorators: [{
                type: Optional
            }] }]; }, { 
    /**
     * @hidden
     */
    onClick: [{
            type: HostListener,
            args: ['click']
        }] }); })();

//# sourceMappingURL=nav-pop.js.map