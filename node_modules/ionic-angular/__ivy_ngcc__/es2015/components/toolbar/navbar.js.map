{"version":3,"file":"navbar.js","sources":["navbar.js"],"names":[],"mappingsyFAqBE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAE;AACF","sourcesContent":["import { Component, ElementRef, Input, Optional, Renderer } from '@angular/core';\nimport { App } from '../app/app';\nimport { Config } from '../../config/config';\nimport { isTrueProperty } from '../../util/util';\nimport { NavController } from '../../navigation/nav-controller';\nimport { ToolbarBase } from './toolbar-base';\nimport { ViewController } from '../../navigation/view-controller';\n/**\n * @name Navbar\n * @description\n * Navbar acts as the navigational toolbar, which also comes with a back\n * button. A navbar can contain a `ion-title`, any number of buttons,\n * a segment, or a searchbar. Navbars must be placed within an\n * `<ion-header>` in order for them to be placed above the content.\n * It's important to note that navbar's are part of the dynamic navigation\n * stack. If you need a static toolbar, use ion-toolbar.\n *\n * @usage\n * ```html\n * <ion-header>\n *\n *   <ion-navbar>\n *     <button ion-button icon-only menuToggle>\n *       <ion-icon name=\"menu\"></ion-icon>\n *     </button>\n *\n *     <ion-title>\n *       Page Title\n *     </ion-title>\n *\n *     <ion-buttons end>\n *       <button ion-button icon-only (click)=\"openModal()\">\n *         <ion-icon name=\"options\"></ion-icon>\n *       </button>\n *     </ion-buttons>\n *   </ion-navbar>\n *\n * </ion-header>\n * ```\n *\n * @demo /docs/demos/src/navbar/\n * @see {@link ../../toolbar/Toolbar/ Toolbar API Docs}\n */\nexport class Navbar extends ToolbarBase {\n    constructor(_app, viewCtrl, navCtrl, config, elementRef, renderer) {\n        super(config, elementRef, renderer);\n        this._app = _app;\n        this.navCtrl = navCtrl;\n        /**\n         * @hidden\n         */\n        this._hidden = false;\n        /**\n         * @hidden\n         */\n        this._hideBb = false;\n        viewCtrl && viewCtrl._setNavbar(this);\n        this._bbIcon = config.get('backButtonIcon');\n        this._sbPadding = config.getBoolean('statusbarPadding');\n        this._backText = config.get('backButtonText', 'Back');\n    }\n    /**\n     * @input {boolean} If true, the back button will be hidden.\n     */\n    get hideBackButton() {\n        return this._hideBb;\n    }\n    set hideBackButton(val) {\n        this._hideBb = isTrueProperty(val);\n    }\n    backButtonClick(ev) {\n        ev.preventDefault();\n        ev.stopPropagation();\n        this.navCtrl && this.navCtrl.pop(null, null);\n    }\n    /**\n     * Set the text of the Back Button in the Nav Bar. Defaults to \"Back\".\n     */\n    setBackButtonText(text) {\n        this._backText = text;\n    }\n    /**\n     * @hidden\n     */\n    didEnter() {\n        try {\n            this._app.setTitle(this.getTitleText());\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    /**\n     * @hidden\n     */\n    setHidden(isHidden) {\n        // used to display none/block the navbar\n        this._hidden = isHidden;\n    }\n}\nNavbar.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-navbar',\n                template: '<div class=\"toolbar-background\" [ngClass]=\"\\'toolbar-background-\\' + _mode\"></div>' +\n                    '<button (click)=\"backButtonClick($event)\" ion-button=\"bar-button\" class=\"back-button\" [ngClass]=\"\\'back-button-\\' + _mode\" [hidden]=\"_hideBb\">' +\n                    '<ion-icon class=\"back-button-icon\" [ngClass]=\"\\'back-button-icon-\\' + _mode\" [name]=\"_bbIcon\"></ion-icon>' +\n                    '<span class=\"back-button-text\" [ngClass]=\"\\'back-button-text-\\' + _mode\">{{_backText}}</span>' +\n                    '</button>' +\n                    '<ng-content select=\"[menuToggle],ion-buttons[left]\"></ng-content>' +\n                    '<ng-content select=\"ion-buttons[start]\"></ng-content>' +\n                    '<ng-content select=\"ion-buttons[end],ion-buttons[right]\"></ng-content>' +\n                    '<div class=\"toolbar-content\" [ngClass]=\"\\'toolbar-content-\\' + _mode\">' +\n                    '<ng-content></ng-content>' +\n                    '</div>',\n                host: {\n                    '[hidden]': '_hidden',\n                    'class': 'toolbar',\n                    '[class.statusbar-padding]': '_sbPadding'\n                }\n            },] },\n];\n/** @nocollapse */\nNavbar.ctorParameters = () => [\n    { type: App, },\n    { type: ViewController, decorators: [{ type: Optional },] },\n    { type: NavController, decorators: [{ type: Optional },] },\n    { type: Config, },\n    { type: ElementRef, },\n    { type: Renderer, },\n];\nNavbar.propDecorators = {\n    'hideBackButton': [{ type: Input },],\n};\n"]}