import { Component, Input, ViewEncapsulation } from '@angular/core';
import { Config } from '../../config/config';
import { Refresher } from './refresher';
/**
 * @hidden
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './refresher';
import * as ɵngcc2 from '../../config/config';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '../icon/icon';
import * as ɵngcc5 from '../spinner/spinner';

function RefresherContent_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelement(1, "ion-icon", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", ctx_r0.pullingIcon);
} }
function RefresherContent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 8);
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r1.pullingText, ɵngcc0.ɵɵsanitizeHtml);
} }
function RefresherContent_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 9);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r2.refreshingText, ɵngcc0.ɵɵsanitizeHtml);
} }
export class RefresherContent {
    constructor(r, _config) {
        this.r = r;
        this._config = _config;
    }
    /**
     * @hidden
     */
    ngOnInit() {
        if (!this.pullingIcon) {
            this.pullingIcon = this._config.get('ionPullIcon', 'arrow-down');
        }
        if (!this.refreshingSpinner) {
            this.refreshingSpinner = this._config.get('ionRefreshingSpinner', this._config.get('spinner', 'ios'));
        }
    }
}
RefresherContent.ɵfac = function RefresherContent_Factory(t) { return new (t || RefresherContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Refresher), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Config)); };
RefresherContent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RefresherContent, selectors: [["ion-refresher-content"]], hostVars: 1, hostBindings: function RefresherContent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("state", ctx.r.state);
    } }, inputs: { pullingIcon: "pullingIcon", refreshingSpinner: "refreshingSpinner", pullingText: "pullingText", refreshingText: "refreshingText" }, decls: 7, vars: 4, consts: [[1, "refresher-pulling"], ["class", "refresher-pulling-icon", 4, "ngIf"], ["class", "refresher-pulling-text", 3, "innerHTML", 4, "ngIf"], [1, "refresher-refreshing"], [1, "refresher-refreshing-icon"], [3, "name"], ["class", "refresher-refreshing-text", 3, "innerHTML", 4, "ngIf"], [1, "refresher-pulling-icon"], [1, "refresher-pulling-text", 3, "innerHTML"], [1, "refresher-refreshing-text", 3, "innerHTML"]], template: function RefresherContent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, RefresherContent_div_1_Template, 2, 1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, RefresherContent_div_2_Template, 1, 1, "div", 2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 3)(4, "div", 4);
        ɵngcc0.ɵɵelement(5, "ion-spinner", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, RefresherContent_div_6_Template, 1, 1, "div", 6);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pullingIcon);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pullingText);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("name", ctx.refreshingSpinner);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.refreshingText);
    } }, dependencies: [ɵngcc3.NgIf, ɵngcc4.Icon, ɵngcc5.Spinner], encapsulation: 2 });
/** @nocollapse */
RefresherContent.ctorParameters = () => [
    { type: Refresher, },
    { type: Config, },
];
RefresherContent.propDecorators = {
    'pullingIcon': [{ type: Input },],
    'pullingText': [{ type: Input },],
    'refreshingSpinner': [{ type: Input },],
    'refreshingText': [{ type: Input },],
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RefresherContent, [{
        type: Component,
        args: [{
                selector: 'ion-refresher-content',
                template: '<div class="refresher-pulling">' +
                    '<div class="refresher-pulling-icon" *ngIf="pullingIcon">' +
                    '<ion-icon [name]="pullingIcon"></ion-icon>' +
                    '</div>' +
                    '<div class="refresher-pulling-text" [innerHTML]="pullingText" *ngIf="pullingText"></div>' +
                    '</div>' +
                    '<div class="refresher-refreshing">' +
                    '<div class="refresher-refreshing-icon">' +
                    '<ion-spinner [name]="refreshingSpinner"></ion-spinner>' +
                    '</div>' +
                    '<div class="refresher-refreshing-text" [innerHTML]="refreshingText" *ngIf="refreshingText"></div>' +
                    '</div>',
                host: {
                    '[attr.state]': 'r.state'
                },
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc1.Refresher }, { type: ɵngcc2.Config }]; }, { pullingIcon: [{
            type: Input
        }], refreshingSpinner: [{
            type: Input
        }], pullingText: [{
            type: Input
        }], refreshingText: [{
            type: Input
        }] }); })();

//# sourceMappingURL=refresher-content.js.map