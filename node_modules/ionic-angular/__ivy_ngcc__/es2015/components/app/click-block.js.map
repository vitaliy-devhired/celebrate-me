{"version":3,"file":"click-block.js","sources":["click-block.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;oHAKE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;uIAAE;AACF","sourcesContent":["import { Directive, ElementRef, Inject, Renderer, forwardRef } from '@angular/core';\nimport { App } from '../app/app';\nimport { Config } from '../../config/config';\nimport { Platform } from '../../platform/platform';\n/**\n * @hidden\n */\nexport class ClickBlock {\n    constructor(app, config, plt, elementRef, renderer) {\n        this.plt = plt;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this._showing = false;\n        app._clickBlock = this;\n        const enabled = this.isEnabled = config.getBoolean('clickBlock', true);\n        if (enabled) {\n            this._setElementClass('click-block-enabled', true);\n        }\n    }\n    activate(shouldShow, expire = 100, minDuration = 0) {\n        if (this.isEnabled) {\n            this.plt.cancelTimeout(this._tmr);\n            if (shouldShow) {\n                // remember when we started the click block\n                this._start = Date.now();\n                // figure out the minimum time it should be showing until\n                // this is useful for transitions that are less than 300ms\n                this._minEnd = this._start + (minDuration || 0);\n                this._activate(true);\n            }\n            this._tmr = this.plt.timeout(this._activate.bind(this, false), expire);\n        }\n    }\n    /** @internal */\n    _activate(shouldShow) {\n        if (this._showing !== shouldShow) {\n            if (!shouldShow) {\n                // check if it was enabled before the minimum duration\n                // this is useful for transitions that are less than 300ms\n                var now = Date.now();\n                if (now < this._minEnd) {\n                    this._tmr = this.plt.timeout(this._activate.bind(this, false), this._minEnd - now);\n                    return;\n                }\n            }\n            this._setElementClass('click-block-active', shouldShow);\n            this._showing = shouldShow;\n        }\n    }\n    _setElementClass(className, add) {\n        this.renderer.setElementClass(this.elementRef.nativeElement, className, add);\n    }\n}\nClickBlock.decorators = [\n    { type: Directive, args: [{\n                selector: '.click-block'\n            },] },\n];\n/** @nocollapse */\nClickBlock.ctorParameters = () => [\n    { type: App, decorators: [{ type: Inject, args: [forwardRef(() => App),] },] },\n    { type: Config, },\n    { type: Platform, },\n    { type: ElementRef, },\n    { type: Renderer, },\n];\n"]}