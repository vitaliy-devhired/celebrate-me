{"version":3,"file":"popover-component.js","sources":["popover-component.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;8DAcE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;oBAAE;AACF;AACA","sourcesContent":["import { Component, ComponentFactoryResolver, ElementRef, HostListener, Renderer, ViewChild, ViewContainerRef } from '@angular/core';\nimport { Config } from '../../config/config';\nimport { KEY_ESCAPE } from '../../platform/key';\nimport { NavParams } from '../../navigation/nav-params';\nimport { ViewController } from '../../navigation/view-controller';\nimport { BLOCK_ALL, GestureController } from '../../gestures/gesture-controller';\nimport { ModuleLoader } from '../../util/module-loader';\n/**\n * @hidden\n */\nexport class PopoverCmp {\n    constructor(_cfr, _elementRef, _renderer, _config, _navParams, _viewCtrl, gestureCtrl, moduleLoader) {\n        this._cfr = _cfr;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._config = _config;\n        this._navParams = _navParams;\n        this._viewCtrl = _viewCtrl;\n        this.moduleLoader = moduleLoader;\n        this._gestureBlocker = gestureCtrl.createBlocker(BLOCK_ALL);\n        this.d = _navParams.data.opts;\n        _renderer.setElementClass(_elementRef.nativeElement, `popover-${_config.get('mode')}`, true);\n        if (this.d.cssClass) {\n            this.d.cssClass.split(' ').forEach(cssClass => {\n                // Make sure the class isn't whitespace, otherwise it throws exceptions\n                if (cssClass.trim() !== '')\n                    _renderer.setElementClass(_elementRef.nativeElement, cssClass, true);\n            });\n        }\n        this.id = (++popoverIds);\n    }\n    ionViewPreLoad() {\n        this._load(this._navParams.data.component);\n    }\n    _load(component) {\n        if (component) {\n            let cfr = this.moduleLoader.getComponentFactoryResolver(component);\n            if (!cfr) {\n                cfr = this._cfr;\n            }\n            const componentFactory = cfr.resolveComponentFactory(component);\n            // ******** DOM WRITE ****************\n            const componentRef = this._viewport.createComponent(componentFactory, this._viewport.length, this._viewport.parentInjector, []);\n            this._viewCtrl._setInstance(componentRef.instance);\n            this._enabled = true;\n            // Subscribe to events in order to block gestures\n            // TODO, should we unsubscribe? memory leak?\n            this._viewCtrl.willEnter.subscribe(this._viewWillEnter.bind(this));\n            this._viewCtrl.didLeave.subscribe(this._viewDidLeave.bind(this));\n        }\n    }\n    _viewWillEnter() {\n        this._gestureBlocker.block();\n    }\n    _viewDidLeave() {\n        this._gestureBlocker.unblock();\n    }\n    _setCssClass(componentRef, className) {\n        this._renderer.setElementClass(componentRef.location.nativeElement, className, true);\n    }\n    _bdClick() {\n        if (this._enabled && this.d.enableBackdropDismiss) {\n            return this._viewCtrl.dismiss(null, 'backdrop');\n        }\n    }\n    _keyUp(ev) {\n        if (this._enabled && ev.keyCode === KEY_ESCAPE && this._viewCtrl.isLast()) {\n            this._bdClick();\n        }\n    }\n    ngOnDestroy() {\n        (void 0) /* assert */;\n        this._gestureBlocker.destroy();\n    }\n}\nPopoverCmp.decorators = [\n    { type: Component, args: [{\n                selector: 'ion-popover',\n                template: '<ion-backdrop (click)=\"_bdClick()\" [hidden]=\"!d.showBackdrop\"></ion-backdrop>' +\n                    '<div class=\"popover-wrapper\">' +\n                    '<div class=\"popover-arrow\"></div>' +\n                    '<div class=\"popover-content\">' +\n                    '<div class=\"popover-viewport\">' +\n                    '<div #viewport nav-viewport></div>' +\n                    '</div>' +\n                    '</div>' +\n                    '</div>'\n            },] },\n];\n/** @nocollapse */\nPopoverCmp.ctorParameters = () => [\n    { type: ComponentFactoryResolver, },\n    { type: ElementRef, },\n    { type: Renderer, },\n    { type: Config, },\n    { type: NavParams, },\n    { type: ViewController, },\n    { type: GestureController, },\n    { type: ModuleLoader, },\n];\nPopoverCmp.propDecorators = {\n    '_viewport': [{ type: ViewChild, args: ['viewport', { read: ViewContainerRef },] },],\n    '_keyUp': [{ type: HostListener, args: ['body:keyup', ['$event'],] },],\n};\nlet popoverIds = -1;\n"]}