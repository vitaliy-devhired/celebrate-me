import { Component } from '@angular/core';
import { NavParams } from '../../navigation/nav-params';
import { ViewController } from '../../navigation/view-controller';
/** @hidden */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../navigation/nav-params';
import * as ɵngcc2 from '../../navigation/view-controller';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/forms';
import * as ɵngcc5 from '../item/item';
import * as ɵngcc6 from '../item/item-content';
import * as ɵngcc7 from '../label/label';
import * as ɵngcc8 from '../list/list';
import * as ɵngcc9 from '../radio/radio-button';
import * as ɵngcc10 from '../radio/radio-group';

function SelectPopover_ion_item_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ion-item")(1, "ion-label");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "ion-radio", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const option_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(option_r1.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("checked", option_r1.checked)("value", option_r1.value)("disabled", option_r1.disabled);
} }
export class SelectPopover {
    constructor(navParams, viewController) {
        this.navParams = navParams;
        this.viewController = viewController;
    }
    get value() {
        let checkedOption = this.options.find(option => option.checked);
        return checkedOption ? checkedOption.value : undefined;
    }
    set value(value) {
        let checkedOption = this.options.find(option => option.value === value);
        if (checkedOption && checkedOption.handler) {
            checkedOption.handler();
        }
        this.viewController.dismiss(value);
    }
    ngOnInit() {
        this.options = this.navParams.data.options;
    }
}
SelectPopover.ɵfac = function SelectPopover_Factory(t) { return new (t || SelectPopover)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NavParams), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ViewController)); };
SelectPopover.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SelectPopover, selectors: [["ng-component"]], decls: 2, vars: 2, consts: [["radio-group", "", 3, "ngModel", "ngModelChange"], [4, "ngFor", "ngForOf"], [3, "checked", "value", "disabled"]], template: function SelectPopover_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ion-list", 0);
        ɵngcc0.ɵɵlistener("ngModelChange", function SelectPopover_Template_ion_list_ngModelChange_0_listener($event) { return ctx.value = $event; });
        ɵngcc0.ɵɵtemplate(1, SelectPopover_ion_item_1_Template, 4, 4, "ion-item", 1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngModel", ctx.value);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.options);
    } }, dependencies: [ɵngcc3.NgForOf, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc5.Item, ɵngcc6.ItemContent, ɵngcc7.Label, ɵngcc8.List, ɵngcc9.RadioButton, ɵngcc10.RadioGroup], encapsulation: 2 });
/** @nocollapse */
SelectPopover.ctorParameters = () => [
    { type: NavParams, },
    { type: ViewController, },
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectPopover, [{
        type: Component,
        args: [{
                template: `
    <ion-list radio-group [(ngModel)]="value">
      <ion-item *ngFor="let option of options">
        <ion-label>{{option.text}}</ion-label>
        <ion-radio [checked]="option.checked" [value]="option.value" [disabled]="option.disabled"></ion-radio>
      </ion-item>
    </ion-list>
  `
            }]
    }], function () { return [{ type: ɵngcc1.NavParams }, { type: ɵngcc2.ViewController }]; }, null); })();

//# sourceMappingURL=select-popover-component.js.map