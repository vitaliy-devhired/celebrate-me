{"version":3,"file":"module.js","sources":["module.js"],"names":[],"mappingsgCA+ME;AACF;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;sGAME;AACF;AACA;;;;;;;;uKAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/**\n * Import Angular\n */\nimport { ANALYZE_FOR_ENTRY_COMPONENTS, APP_INITIALIZER, ComponentFactoryResolver, Inject, Injector, NgModule, NgZone, Optional } from '@angular/core';\nimport { APP_BASE_HREF, HashLocationStrategy, Location, LocationStrategy, PathLocationStrategy, PlatformLocation } from '@angular/common';\nimport { DOCUMENT, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n/**\n * Global Providers\n */\nimport { App } from './components/app/app';\nimport { AppRootToken } from './components/app/app-root';\nimport { Config, ConfigToken, setupConfig } from './config/config';\nimport { DeepLinker, setupDeepLinker } from './navigation/deep-linker';\nimport { DomController } from './platform/dom-controller';\nimport { Events, setupProvideEvents } from './util/events';\nimport { Form } from './util/form';\nimport { GestureController } from './gestures/gesture-controller';\nimport { IonicGestureConfig } from './gestures/gesture-config';\nimport { Haptic } from './tap-click/haptic';\nimport { Keyboard } from './platform/keyboard';\nimport { LAZY_LOADED_TOKEN, ModuleLoader, provideModuleLoader, setupPreloading } from './util/module-loader';\nimport { NgModuleLoader } from './util/ng-module-loader';\nimport { Platform, setupPlatform } from './platform/platform';\nimport { PlatformConfigToken, providePlatformConfigs } from './platform/platform-registry';\nimport { TapClick, setupTapClick } from './tap-click/tap-click';\nimport { registerModeConfigs } from './config/mode-registry';\nimport { TransitionController } from './transitions/transition-controller';\nimport { DeepLinkConfigToken, UrlSerializer, setupUrlSerializer } from './navigation/url-serializer';\n/**\n * Import Components/Directives/Etc\n */\nimport { ActionSheetCmp } from './components/action-sheet/action-sheet-component';\nimport { ActionSheetController } from './components/action-sheet/action-sheet-controller';\nimport { AlertCmp } from './components/alert/alert-component';\nimport { AlertController } from './components/alert/alert-controller';\nimport { ClickBlock } from './components/app/click-block';\nimport { IonicApp } from './components/app/app-root';\nimport { OverlayPortal } from './components/app/overlay-portal';\nimport { Avatar } from './components/avatar/avatar';\nimport { Backdrop } from './components/backdrop/backdrop';\nimport { Badge } from './components/badge/badge';\nimport { Button } from './components/button/button';\nimport { Card } from './components/card/card';\nimport { CardContent } from './components/card/card-content';\nimport { CardHeader } from './components/card/card-header';\nimport { CardTitle } from './components/card/card-title';\nimport { Checkbox } from './components/checkbox/checkbox';\nimport { Chip } from './components/chip/chip';\nimport { Content } from './components/content/content';\nimport { DateTime } from './components/datetime/datetime';\nimport { FabButton } from './components/fab/fab';\nimport { FabContainer } from './components/fab/fab-container';\nimport { FabList } from './components/fab/fab-list';\nimport { Col } from './components/grid/col';\nimport { Grid } from './components/grid/grid';\nimport { Row } from './components/grid/row';\nimport { Icon } from './components/icon/icon';\nimport { Img } from './components/img/img';\nimport { InfiniteScroll } from './components/infinite-scroll/infinite-scroll';\nimport { InfiniteScrollContent } from './components/infinite-scroll/infinite-scroll-content';\nimport { TextInput } from './components/input/input';\nimport { Item } from './components/item/item';\nimport { ItemContent } from './components/item/item-content';\nimport { ItemDivider } from './components/item/item-divider';\nimport { ItemGroup } from './components/item/item-group';\nimport { ItemOptions } from './components/item/item-options';\nimport { ItemReorder } from './components/item/item-reorder';\nimport { ItemSliding } from './components/item/item-sliding';\nimport { Reorder } from './components/item/reorder';\nimport { Label } from './components/label/label';\nimport { List } from './components/list/list';\nimport { ListHeader } from './components/list/list-header';\nimport { LoadingCmp } from './components/loading/loading-component';\nimport { LoadingController } from './components/loading/loading-controller';\nimport { Menu } from './components/menu/menu';\nimport { MenuClose } from './components/menu/menu-close';\nimport { MenuController } from './components/app/menu-controller';\nimport { MenuToggle } from './components/menu/menu-toggle';\nimport { ModalCmp } from './components/modal/modal-component';\nimport { ModalController } from './components/modal/modal-controller';\nimport { Nav } from './components/nav/nav';\nimport { NavPop } from './components/nav/nav-pop';\nimport { NavPopAnchor } from './components/nav/nav-pop-anchor';\nimport { NavPush } from './components/nav/nav-push';\nimport { NavPushAnchor } from './components/nav/nav-push-anchor';\nimport { Note } from './components/note/note';\nimport { Option } from './components/option/option';\nimport { PickerCmp } from './components/picker/picker-component';\nimport { PickerColumnCmp } from './components/picker/picker-column';\nimport { PickerController } from './components/picker/picker-controller';\nimport { PopoverCmp } from './components/popover/popover-component';\nimport { PopoverController } from './components/popover/popover-controller';\nimport { RadioButton } from './components/radio/radio-button';\nimport { RadioGroup } from './components/radio/radio-group';\nimport { Range } from './components/range/range';\nimport { RangeKnob } from './components/range/range-knob';\nimport { Refresher } from './components/refresher/refresher';\nimport { RefresherContent } from './components/refresher/refresher-content';\nimport { Scroll } from './components/scroll/scroll';\nimport { Searchbar } from './components/searchbar/searchbar';\nimport { Segment } from './components/segment/segment';\nimport { Select } from './components/select/select';\nimport { SelectPopover } from './components/select/select-popover-component';\nimport { SegmentButton } from './components/segment/segment-button';\nimport { ShowWhen } from './components/show-hide-when/show-when';\nimport { HideWhen } from './components/show-hide-when/hide-when';\nimport { Slide } from './components/slides/slide';\nimport { Slides } from './components/slides/slides';\nimport { Spinner } from './components/spinner/spinner';\nimport { SplitPane } from './components/split-pane/split-pane';\nimport { Tab } from './components/tabs/tab';\nimport { TabButton } from './components/tabs/tab-button';\nimport { TabHighlight } from './components/tabs/tab-highlight';\nimport { Tabs } from './components/tabs/tabs';\nimport { Thumbnail } from './components/thumbnail/thumbnail';\nimport { ToastCmp } from './components/toast/toast-component';\nimport { ToastController } from './components/toast/toast-controller';\nimport { Toggle } from './components/toggle/toggle';\nimport { Footer } from './components/toolbar/toolbar-footer';\nimport { Header } from './components/toolbar/toolbar-header';\nimport { Toolbar } from './components/toolbar/toolbar';\nimport { ToolbarItem } from './components/toolbar/toolbar-item';\nimport { ToolbarTitle } from './components/toolbar/toolbar-title';\nimport { Navbar } from './components/toolbar/navbar';\nimport { Typography } from './components/typography/typography';\nimport { VirtualFooter } from './components/virtual-scroll/virtual-footer';\nimport { VirtualHeader } from './components/virtual-scroll/virtual-header';\nimport { VirtualItem } from './components/virtual-scroll/virtual-item';\nimport { VirtualScroll } from './components/virtual-scroll/virtual-scroll';\n/**\n * @name IonicModule\n * @description\n * IonicModule is an [NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html) that bootstraps\n * an Ionic App. By passing a root component, IonicModule will make sure that all of the components,\n * directives, and providers from the framework are imported.\n *\n * Any configuration for the app can be passed as the second argument to `forRoot`. This can be any\n * valid property from the [Config](/docs/api/config/Config/).\n *\n * @usage\n * ```ts\n * import { NgModule } from '@angular/core';\n *\n * import { IonicApp, IonicModule } from 'ionic-angular';\n *\n * import { MyApp } from './app.component';\n * import { HomePage } from '../pages/home/home';\n *\n * @NgModule({\n *   declarations: [\n *     MyApp,\n *     HomePage\n *   ],\n *   imports: [\n *     BrowserModule,\n *     IonicModule.forRoot(MyApp, {\n *\n *     })\n *   ],\n *   bootstrap: [IonicApp],\n *   entryComponents: [\n *     MyApp,\n *     HomePage\n *   ],\n *   providers: []\n * })\n * export class AppModule {}\n * ```\n */\nexport class IonicModule {\n    /**\n     * Set the root app component for you IonicModule\n     * @param {any} appRoot The root AppComponent for this app.\n     * @param {any} config Config Options for the app. Accepts any config property.\n     * @param {any} deepLinkConfig Any configuration needed for the Ionic Deeplinker.\n     */\n    static forRoot(appRoot, config = null, deepLinkConfig = null) {\n        return {\n            ngModule: IonicModule,\n            providers: [\n                // useValue: bootstrap values\n                { provide: AppRootToken, useValue: appRoot },\n                { provide: ConfigToken, useValue: config },\n                { provide: DeepLinkConfigToken, useValue: deepLinkConfig },\n                { provide: APP_BASE_HREF, useValue: '/' },\n                // useFactory: user values\n                { provide: PlatformConfigToken, useFactory: providePlatformConfigs },\n                // useFactory: ionic core providers\n                { provide: Platform, useFactory: setupPlatform, deps: [DOCUMENT, PlatformConfigToken, NgZone] },\n                { provide: Config, useFactory: setupConfig, deps: [ConfigToken, Platform] },\n                // useFactory: ionic app initializers\n                { provide: APP_INITIALIZER, useFactory: registerModeConfigs, deps: [Config], multi: true },\n                { provide: APP_INITIALIZER, useFactory: setupProvideEvents, deps: [Platform, DomController], multi: true },\n                { provide: APP_INITIALIZER, useFactory: setupTapClick, deps: [Config, Platform, DomController, App, GestureController], multi: true },\n                { provide: APP_INITIALIZER, useFactory: setupPreloading, deps: [Config, DeepLinkConfigToken, ModuleLoader, NgZone], multi: true },\n                // useClass\n                { provide: HAMMER_GESTURE_CONFIG, useClass: IonicGestureConfig },\n                // useValue\n                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: appRoot, multi: true },\n                // ionic providers\n                ActionSheetController,\n                AlertController,\n                App,\n                DomController,\n                Events,\n                Form,\n                GestureController,\n                Haptic,\n                Keyboard,\n                LoadingController,\n                Location,\n                MenuController,\n                ModalController,\n                NgModuleLoader,\n                PickerController,\n                PopoverController,\n                TapClick,\n                ToastController,\n                TransitionController,\n                { provide: ModuleLoader, useFactory: provideModuleLoader, deps: [NgModuleLoader, Injector] },\n                { provide: LocationStrategy, useFactory: provideLocationStrategy, deps: [PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], Config] },\n                { provide: UrlSerializer, useFactory: setupUrlSerializer, deps: [App, DeepLinkConfigToken] },\n                { provide: DeepLinker, useFactory: setupDeepLinker, deps: [App, UrlSerializer, Location, ModuleLoader, ComponentFactoryResolver] },\n            ]\n        };\n    }\n}\nIonicModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    ActionSheetCmp,\n                    AlertCmp,\n                    ClickBlock,\n                    IonicApp,\n                    OverlayPortal,\n                    Avatar,\n                    Backdrop,\n                    Badge,\n                    Button,\n                    Card,\n                    CardContent,\n                    CardHeader,\n                    CardTitle,\n                    Checkbox,\n                    Chip,\n                    Col,\n                    Content,\n                    DateTime,\n                    FabButton,\n                    FabContainer,\n                    FabList,\n                    Grid,\n                    Img,\n                    Icon,\n                    InfiniteScroll,\n                    InfiniteScrollContent,\n                    Item,\n                    ItemContent,\n                    ItemDivider,\n                    ItemGroup,\n                    ItemOptions,\n                    ItemReorder,\n                    ItemSliding,\n                    Label,\n                    List,\n                    ListHeader,\n                    Reorder,\n                    LoadingCmp,\n                    Menu,\n                    MenuClose,\n                    MenuToggle,\n                    ModalCmp,\n                    Nav,\n                    NavPop,\n                    NavPopAnchor,\n                    NavPush,\n                    NavPushAnchor,\n                    Note,\n                    Option,\n                    PickerCmp,\n                    PickerColumnCmp,\n                    PopoverCmp,\n                    RadioButton,\n                    RadioGroup,\n                    Range,\n                    RangeKnob,\n                    Refresher,\n                    RefresherContent,\n                    Row,\n                    Scroll,\n                    Searchbar,\n                    Segment,\n                    SegmentButton,\n                    Select,\n                    SelectPopover,\n                    ShowWhen,\n                    HideWhen,\n                    Slide,\n                    Slides,\n                    Spinner,\n                    SplitPane,\n                    Tab,\n                    TabButton,\n                    TabHighlight,\n                    Tabs,\n                    TextInput,\n                    Thumbnail,\n                    ToastCmp,\n                    Toggle,\n                    Footer,\n                    Header,\n                    Toolbar,\n                    ToolbarItem,\n                    ToolbarTitle,\n                    Navbar,\n                    Typography,\n                    VirtualFooter,\n                    VirtualHeader,\n                    VirtualItem,\n                    VirtualScroll\n                ],\n                imports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                ],\n                exports: [\n                    CommonModule,\n                    FormsModule,\n                    ReactiveFormsModule,\n                    ActionSheetCmp,\n                    AlertCmp,\n                    ClickBlock,\n                    IonicApp,\n                    OverlayPortal,\n                    Avatar,\n                    Backdrop,\n                    Badge,\n                    Button,\n                    Card,\n                    CardContent,\n                    CardHeader,\n                    CardTitle,\n                    Checkbox,\n                    Chip,\n                    Col,\n                    Content,\n                    DateTime,\n                    FabButton,\n                    FabContainer,\n                    FabList,\n                    Grid,\n                    Img,\n                    Icon,\n                    InfiniteScroll,\n                    InfiniteScrollContent,\n                    Item,\n                    ItemContent,\n                    ItemDivider,\n                    ItemGroup,\n                    ItemOptions,\n                    ItemReorder,\n                    ItemSliding,\n                    Label,\n                    List,\n                    ListHeader,\n                    Reorder,\n                    LoadingCmp,\n                    Menu,\n                    MenuClose,\n                    MenuToggle,\n                    ModalCmp,\n                    Nav,\n                    NavPop,\n                    NavPopAnchor,\n                    NavPush,\n                    NavPushAnchor,\n                    Note,\n                    Option,\n                    PickerCmp,\n                    PickerColumnCmp,\n                    PopoverCmp,\n                    RadioButton,\n                    RadioGroup,\n                    Range,\n                    RangeKnob,\n                    Refresher,\n                    RefresherContent,\n                    Row,\n                    Scroll,\n                    Searchbar,\n                    Segment,\n                    SegmentButton,\n                    Select,\n                    SelectPopover,\n                    ShowWhen,\n                    HideWhen,\n                    Slide,\n                    Slides,\n                    Spinner,\n                    SplitPane,\n                    Tab,\n                    TabButton,\n                    TabHighlight,\n                    Tabs,\n                    TextInput,\n                    Thumbnail,\n                    ToastCmp,\n                    Toggle,\n                    Footer,\n                    Header,\n                    Toolbar,\n                    ToolbarItem,\n                    ToolbarTitle,\n                    Navbar,\n                    Typography,\n                    VirtualFooter,\n                    VirtualHeader,\n                    VirtualItem,\n                    VirtualScroll\n                ],\n                entryComponents: [\n                    ActionSheetCmp,\n                    AlertCmp,\n                    IonicApp,\n                    LoadingCmp,\n                    ModalCmp,\n                    PickerCmp,\n                    PopoverCmp,\n                    SelectPopover,\n                    ToastCmp\n                ]\n            },] },\n];\n/** @nocollapse */\nIonicModule.ctorParameters = () => [];\n/**\n * @name IonicPageModule\n * @description\n * IonicPageModule is an [NgModule](https://angular.io/docs/ts/latest/guide/ngmodule.html) that\n * bootstraps a child [IonicPage](../navigation/IonicPage/) in order to set up routing.\n *\n * @usage\n * ```ts\n * import { NgModule } from '@angular/core';\n *\n * import { IonicPageModule } from 'ionic-angular';\n *\n * import { HomePage } from './home';\n *\n * @NgModule({\n * \tdeclarations: [\n * \t\tHomePage\n * \t],\n * \timports: [\n * \t\tIonicPageModule.forChild(HomePage)\n * \t],\n * \tentryComponents: [\n * \t\tHomePage\n * \t]\n * })\n * export class HomePageModule { }\n * ```\n */\nexport class IonicPageModule {\n    static forChild(page) {\n        return {\n            ngModule: IonicPageModule,\n            providers: [\n                { provide: LAZY_LOADED_TOKEN, useValue: page },\n                { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: page, multi: true },\n            ]\n        };\n    }\n}\nIonicPageModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [IonicModule],\n                exports: [IonicModule]\n            },] },\n];\n/** @nocollapse */\nIonicPageModule.ctorParameters = () => [];\n/**\n * @hidden\n */\nexport function provideLocationStrategy(platformLocationStrategy, baseHref, config) {\n    return config.get('locationStrategy') === 'path' ?\n        new PathLocationStrategy(platformLocationStrategy, baseHref) :\n        new HashLocationStrategy(platformLocationStrategy, baseHref);\n}\n"]}