import { Injectable } from '@angular/core';
import { HammerGestureConfig } from '@angular/platform-browser';
/**
 * @hidden
 * This class overrides the default Angular gesture config.
 */
import * as ɵngcc0 from '@angular/core';
export class IonicGestureConfig extends HammerGestureConfig {
    buildHammer(element) {
        const mc = new window.Hammer(element);
        for (let eventName in this.overrides) {
            mc.get(eventName).set(this.overrides[eventName]);
        }
        return mc;
    }
}
IonicGestureConfig.ɵfac = /*@__PURE__*/ function () { let ɵIonicGestureConfig_BaseFactory; return function IonicGestureConfig_Factory(t) { return (ɵIonicGestureConfig_BaseFactory || (ɵIonicGestureConfig_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(IonicGestureConfig)))(t || IonicGestureConfig); }; }();
IonicGestureConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: IonicGestureConfig, factory: IonicGestureConfig.ɵfac });
/** @nocollapse */
IonicGestureConfig.ctorParameters = () => [];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IonicGestureConfig, [{
        type: Injectable
    }], null, null); })();

//# sourceMappingURL=gesture-config.js.map